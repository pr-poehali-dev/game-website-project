import { useState, useEffect, useRef } from "react";
import Navbar from "@/components/Navbar";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–ª—è –º–∞—à–∏–Ω—ã –∏ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π
interface Car {
  x: number;
  y: number;
  width: number;
  height: number;
}

interface Obstacle {
  x: number;
  y: number;
  width: number;
  height: number;
  speed: number;
}

const FreeGames = () => {
  const [selectedGame, setSelectedGame] = useState("carRace");
  const [gameStarted, setGameStarted] = useState(false);
  const [score, setScore] = useState(0);
  const [gameOver, setGameOver] = useState(false);
  const canvasRef = useRef<HTMLCanvasElement | null>(null);
  const gameLoopRef = useRef<number | null>(null);
  
  // –ò–≥—Ä–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã
  const carRef = useRef<Car>({
    x: 50,
    y: 300,
    width: 50,
    height: 30
  });
  const obstaclesRef = useRef<Obstacle[]>([]);
  const keysRef = useRef<{ [key: string]: boolean }>({});

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
  const initGame = () => {
    setGameStarted(true);
    setGameOver(false);
    setScore(0);
    
    carRef.current = {
      x: 50,
      y: 300,
      width: 50,
      height: 30
    };
    
    obstaclesRef.current = [];
    
    if (gameLoopRef.current) {
      cancelAnimationFrame(gameLoopRef.current);
    }
    
    gameLoop();
  };

  // –ì–ª–∞–≤–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
  const gameLoop = () => {
    const canvas = canvasRef.current;
    if (!canvas) return;
    
    const ctx = canvas.getContext("2d");
    if (!ctx) return;
    
    // –û—á–∏—Å—Ç–∫–∞ –∫–∞–Ω–≤–∞—Å–∞
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –º–∞—à–∏–Ω—ã
    updateCarPosition();
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π
    if (Math.random() < 0.02) {
      obstaclesRef.current.push({
        x: canvas.width,
        y: Math.random() * (canvas.height - 40),
        width: 30,
        height: 30,
        speed: 2 + Math.random() * 3
      });
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π
    updateAndDrawObstacles(ctx);
    
    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–∞—à–∏–Ω—ã
    drawCar(ctx);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
    checkCollisions();
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—á–µ—Ç–∞
    ctx.fillStyle = "#ffffff";
    ctx.font = "20px Arial";
    ctx.fillText(`–°—á—ë—Ç: ${score}`, 10, 30);
    
    // –î–æ—Ä–æ–∂–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞
    drawRoad(ctx, canvas);
    
    if (!gameOver) {
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç
      setScore(prev => prev + 1);
      
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
      gameLoopRef.current = requestAnimationFrame(gameLoop);
    } else {
      // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ Game Over
      ctx.fillStyle = "rgba(0, 0, 0, 0.7)";
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      
      ctx.fillStyle = "#ffffff";
      ctx.font = "36px Arial";
      ctx.fillText("GAME OVER", canvas.width / 2 - 100, canvas.height / 2 - 20);
      
      ctx.font = "24px Arial";
      ctx.fillText(`–í–∞—à —Å—á—ë—Ç: ${score}`, canvas.width / 2 - 70, canvas.height / 2 + 20);
      
      ctx.font = "18px Arial";
      ctx.fillText("–ù–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É', —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", canvas.width / 2 - 170, canvas.height / 2 + 60);
    }
  };

  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –¥–æ—Ä–æ–≥–∏
  const drawRoad = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {
    ctx.fillStyle = "#333";
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    
    // –î–æ—Ä–æ–∂–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞
    ctx.strokeStyle = "#ffffff";
    ctx.setLineDash([20, 20]);
    ctx.beginPath();
    ctx.moveTo(canvas.width / 2, 0);
    ctx.lineTo(canvas.width / 2, canvas.height);
    ctx.stroke();
    
    // –û–±–æ—á–∏–Ω—ã
    ctx.strokeStyle = "#ffff00";
    ctx.setLineDash([]);
    ctx.beginPath();
    ctx.moveTo(20, 0);
    ctx.lineTo(20, canvas.height);
    ctx.stroke();
    
    ctx.beginPath();
    ctx.moveTo(canvas.width - 20, 0);
    ctx.lineTo(canvas.width - 20, canvas.height);
    ctx.stroke();
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –º–∞—à–∏–Ω—ã
  const updateCarPosition = () => {
    const car = carRef.current;
    const canvas = canvasRef.current;
    if (!canvas) return;
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—à–∏–Ω–æ–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    if (keysRef.current["ArrowUp"] || keysRef.current["w"]) {
      car.y -= 5;
    }
    if (keysRef.current["ArrowDown"] || keysRef.current["s"]) {
      car.y += 5;
    }
    if (keysRef.current["ArrowLeft"] || keysRef.current["a"]) {
      car.x -= 5;
    }
    if (keysRef.current["ArrowRight"] || keysRef.current["d"]) {
      car.x += 5;
    }
    
    // –ì—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –º–∞—à–∏–Ω—ã
    car.x = Math.max(30, Math.min(canvas.width - car.width - 30, car.x));
    car.y = Math.max(10, Math.min(canvas.height - car.height - 10, car.y));
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π
  const updateAndDrawObstacles = (ctx: CanvasRenderingContext2D) => {
    const canvas = canvasRef.current;
    if (!canvas) return;
    
    obstaclesRef.current = obstaclesRef.current.filter(obstacle => {
      // –î–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è
      obstacle.x -= obstacle.speed;
      
      // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è
      ctx.fillStyle = "#ff0000";
      ctx.fillRect(obstacle.x, obstacle.y, obstacle.width, obstacle.height);
      
      // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—à–ª–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç–∫—Ä–∞–Ω–∞
      return obstacle.x + obstacle.width > 0;
    });
  };

  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–∞—à–∏–Ω—ã
  const drawCar = (ctx: CanvasRenderingContext2D) => {
    const car = carRef.current;
    
    // –ú–∞—à–∏–Ω–∞ (–∫—É–∑–æ–≤)
    ctx.fillStyle = "#0088ff";
    ctx.fillRect(car.x, car.y, car.width, car.height);
    
    // –ö–∞–±–∏–Ω–∞
    ctx.fillStyle = "#87cefa";
    ctx.fillRect(car.x + 10, car.y - 10, car.width - 20, 15);
    
    // –ö–æ–ª–µ—Å–∞
    ctx.fillStyle = "#000000";
    ctx.fillRect(car.x + 5, car.y - 5, 10, 5); // –ü–µ—Ä–µ–¥–Ω–µ–µ –ª–µ–≤–æ–µ
    ctx.fillRect(car.x + car.width - 15, car.y - 5, 10, 5); // –ü–µ—Ä–µ–¥–Ω–µ–µ –ø—Ä–∞–≤–æ–µ
    ctx.fillRect(car.x + 5, car.y + car.height, 10, 5); // –ó–∞–¥–Ω–µ–µ –ª–µ–≤–æ–µ
    ctx.fillRect(car.x + car.width - 15, car.y + car.height, 10, 5); // –ó–∞–¥–Ω–µ–µ –ø—Ä–∞–≤–æ–µ
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
  const checkCollisions = () => {
    const car = carRef.current;
    
    for (const obstacle of obstaclesRef.current) {
      if (
        car.x < obstacle.x + obstacle.width &&
        car.x + car.width > obstacle.x &&
        car.y < obstacle.y + obstacle.height &&
        car.y + car.height > obstacle.y
      ) {
        setGameOver(true);
        return;
      }
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      keysRef.current[e.key] = true;
    };
    
    const handleKeyUp = (e: KeyboardEvent) => {
      keysRef.current[e.key] = false;
    };
    
    window.addEventListener("keydown", handleKeyDown);
    window.addEventListener("keyup", handleKeyUp);
    
    return () => {
      window.removeEventListener("keydown", handleKeyDown);
      window.removeEventListener("keyup", handleKeyUp);
      if (gameLoopRef.current) {
        cancelAnimationFrame(gameLoopRef.current);
      }
    };
  }, []);

  return (
    <div className="min-h-screen bg-game-dark text-white">
      <Navbar />
      
      <main className="container mx-auto py-8 px-4">
        <h1 className="text-4xl font-bold mb-6 flex items-center">
          <span className="text-game-accent mr-2">üéÆ</span> –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ò–≥—Ä—ã
        </h1>
        
        <Tabs defaultValue="carRace" className="w-full" onValueChange={setSelectedGame}>
          <TabsList className="grid w-full grid-cols-2 mb-8">
            <TabsTrigger value="carRace">–ì–æ–Ω–∫–∏ –Ω–∞ –í—ã–∂–∏–≤–∞–Ω–∏–µ</TabsTrigger>
            <TabsTrigger value="comingSoon">–°–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è</TabsTrigger>
          </TabsList>
          
          <TabsContent value="carRace" className="space-y-6">
            <Card className="bg-game-card/30 p-6 rounded-xl border-game-accent/30">
              <div className="flex flex-col md:flex-row gap-6">
                <div className="flex-1">
                  <h2 className="text-2xl font-bold mb-4 text-game-accent">–ì–æ–Ω–∫–∏ –Ω–∞ –í—ã–∂–∏–≤–∞–Ω–∏–µ</h2>
                  
                  <p className="mb-4">
                    –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –º–∞—à–∏–Ω–æ–π –∏ —É–∫–ª–æ–Ω—è–π—Ç–µ—Å—å –æ—Ç –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π –∫–∞–∫ –º–æ–∂–Ω–æ –¥–æ–ª—å—à–µ. –ß–µ–º –¥–æ–ª—å—à–µ –ø—Ä–æ–¥–µ—Ä–∂–∏—Ç–µ—Å—å, —Ç–µ–º –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ –Ω–∞–±–µ—Ä—ë—Ç–µ!
                  </p>
                  
                  <div className="mb-6">
                    <h3 className="text-xl font-semibold mb-2">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</h3>
                    <ul className="list-disc pl-5 space-y-1">
                      <li>–°—Ç—Ä–µ–ª–∫–∏ –∏–ª–∏ WASD –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è –º–∞—à–∏–Ω—ã</li>
                      <li>–ò–∑–±–µ–≥–∞–π—Ç–µ –∫—Ä–∞—Å–Ω—ã—Ö –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π</li>
                      <li>–°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø—Ä–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è –∫–∞–∫ –º–æ–∂–Ω–æ –¥–æ–ª—å—à–µ</li>
                    </ul>
                  </div>
                  
                  <Button 
                    onClick={initGame} 
                    className="bg-game-primary hover:bg-game-secondary text-white px-6 py-3 rounded-md transition-colors"
                  >
                    {gameStarted ? "–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ" : "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"}
                  </Button>
                </div>
                
                <div className="flex-1 flex flex-col items-center">
                  <div className="relative">
                    <canvas 
                      ref={canvasRef} 
                      width={600} 
                      height={400} 
                      className="border-2 border-game-accent/50 rounded-md bg-gray-800 w-full max-w-[600px] aspect-[3/2]"
                    />
                    
                    {!gameStarted && !gameOver && (
                      <div className="absolute inset-0 flex flex-col items-center justify-center bg-black/70 rounded-md">
                        <h3 className="text-2xl font-bold mb-4 text-game-accent">–ì–æ–Ω–∫–∏ –Ω–∞ –í—ã–∂–∏–≤–∞–Ω–∏–µ</h3>
                        <p className="text-center mb-4 max-w-md px-4">
                          –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –º–∞—à–∏–Ω–æ–π –∏ –∏–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!
                        </p>
                        <Button 
                          onClick={initGame} 
                          className="bg-game-primary hover:bg-game-secondary text-white px-6 py-3 rounded-md transition-colors"
                        >
                          –ò–≥—Ä–∞—Ç—å
                        </Button>
                      </div>
                    )}
                  </div>
                  
                  <div className="mt-4 text-sm text-gray-400">
                    <p>* –î–ª—è –ª—É—á—à–µ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –æ–ø—ã—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–≥—Ä–∞—Ç—å –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ</p>
                  </div>
                </div>
              </div>
            </Card>
            
            <div className="bg-game-card/30 p-6 rounded-xl border-game-accent/30">
              <h3 className="text-xl font-bold mb-4">–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤</h3>
              
              <div className="overflow-x-auto">
                <table className="w-full">
                  <thead className="border-b border-gray-700">
                    <tr>
                      <th className="text-left py-3 px-4">#</th>
                      <th className="text-left py-3 px-4">–ò–≥—Ä–æ–∫</th>
                      <th className="text-left py-3 px-4">–°—á—ë—Ç</th>
                      <th className="text-left py-3 px-4">–î–∞—Ç–∞</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr className="border-b border-gray-700/50">
                      <td className="py-3 px-4">1</td>
                      <td className="py-3 px-4">SpeedRacer</td>
                      <td className="py-3 px-4 text-game-accent">12,345</td>
                      <td className="py-3 px-4">25.04.2025</td>
                    </tr>
                    <tr className="border-b border-gray-700/50">
                      <td className="py-3 px-4">2</td>
                      <td className="py-3 px-4">DriftKing</td>
                      <td className="py-3 px-4 text-game-accent">10,982</td>
                      <td className="py-3 px-4">24.04.2025</td>
                    </tr>
                    <tr className="border-b border-gray-700/50">
                      <td className="py-3 px-4">3</td>
                      <td className="py-3 px-4">NitroBoost</td>
                      <td className="py-3 px-4 text-game-accent">9,876</td>
                      <td className="py-3 px-4">23.04.2025</td>
                    </tr>
                    <tr className="border-b border-gray-700/50">
                      <td className="py-3 px-4">4</td>
                      <td className="py-3 px-4">RoadWarrior</td>
                      <td className="py-3 px-4 text-game-accent">8,721</td>
                      <td className="py-3 px-4">22.04.2025</td>
                    </tr>
                    <tr>
                      <td className="py-3 px-4">5</td>
                      <td className="py-3 px-4">TurboRacer</td>
                      <td className="py-3 px-4 text-game-accent">7,654</td>
                      <td className="py-3 px-4">21.04.2025</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </TabsContent>
          
          <TabsContent value="comingSoon">
            <Card className="bg-game-card/30 p-6 rounded-xl border-game-accent/30">
              <div className="text-center py-12">
                <h2 className="text-2xl font-bold mb-4 text-game-accent">
                  –ù–æ–≤—ã–µ –∏–≥—Ä—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!
                </h2>
                <p className="mb-6 max-w-2xl mx-auto">
                  –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –Ω–æ–≤—ã–º–∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º–∏ –∏–≥—Ä–∞–º–∏. 
                  –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å —Å –Ω–∞–º–∏, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –Ω–æ–≤–∏–Ω–æ–∫. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, 
                  —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –≤—ã—Ö–æ–¥–µ –Ω–æ–≤—ã—Ö –∏–≥—Ä –ø–µ—Ä–≤—ã–º–∏!
                </p>
                <Button 
                  className="bg-game-primary hover:bg-game-secondary text-white px-6 py-3 rounded-md transition-colors"
                >
                  –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                </Button>
              </div>
            </Card>
          </TabsContent>
        </Tabs>
      </main>
      
      <footer className="bg-game-dark border-t border-gray-700 py-8 px-4">
        <div className="container mx-auto">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="mb-4 md:mb-0">
              <div className="text-xl font-bold flex items-center gap-2">
                <span className="text-game-accent">üî•</span> Fire Game
              </div>
              <p className="text-sm text-gray-400 mt-1">¬© 2025 –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã</p>
            </div>
            
            <div className="flex gap-4">
              <a href="#" className="text-gray-400 hover:text-white transition-colors">
                –û –Ω–∞—Å
              </a>
              <a href="#" className="text-gray-400 hover:text-white transition-colors">
                –ö–æ–Ω—Ç–∞–∫—Ç—ã
              </a>
              <a href="#" className="text-gray-400 hover:text-white transition-colors">
                –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
              </a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default FreeGames;
